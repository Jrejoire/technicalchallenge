{"version":3,"sources":["Components/Menu.js","Components/SearchBar.js","Components/ActionButtons.js","Components/GridData.js","actions.js","constants.js","Components/Home.js","Components/IssueTokenForm.js","Components/IssueToken.js","Containers/App.js","serviceWorker.js","reducers.js","index.js"],"names":["InlineMenu","react_default","a","createElement","menu","Item","style","marginBottom","textAlign","react_router_dom","to","src","alt","paddingLeft","icon","type","color","SearchBar","_ref","searchChange","es_form","layout","className","input","prefix","placeholder","onChange","Actions","row","justify","gutter","col","es_button","GridData","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onDelete","key","e","preventDefault","handleDelete","columns","title","dataIndex","render","text","record","onClick","padding","tokenProp","table","dataSource","Component","setSearchField","payload","updateToken","data","Home","_this$props","tokenData","filterTokenData","some","token","filter","_this$props2","searchField","onSearchChange","filteredTokens","tokenName","toLowerCase","includes","tokenTicker","issuerName","span","Components_SearchBar","ActionButtons","Components_GridData","connect","state","searchTokens","getTokenData","dispatch","event","target","value","length","localStorage","setItem","JSON","stringify","Option","Select","TokenForm","callbackMethod","values","newToken","handleSubmit","form","validateFields","err","console","log","resetFields","alert","listOfCountries","_this2","fetch","then","answer","json","countries","setState","catch","error","getFieldDecorator","countryName","map","country","name","code","alpha2Code","assign","labelCol","xs","sm","wrapperCol","onSubmit","label","rules","required","message","input_number","width","initialValue","es_select","offset","htmlType","WrappedTokenForm","Form","create","IssueToken","IssueTokenForm","App","newTokenCallback","date","addTokenData","lastTokenKey","slice","creationDate","toString","concat","toConsumableArray","setsDate","updateTokenData","getItem","parse","basename","Menu","react_router","exact","path","Components_Home","Components_IssueToken","getDate","Date","today","getMonth","getFullYear","setDate","Boolean","window","location","hostname","match","initialStateSearch","initialStateToken","totalSupply","template","initialStateDate","logger","createLogger","rootReducer","combineReducers","arguments","undefined","action","objectSpread","store","createStore","applyMiddleware","ReactDOM","es","src_Containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.acfe3671.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Menu, Icon } from 'antd';\r\n\r\nconst InlineMenu = () => {\r\n\treturn(\r\n\t\t<Menu>\r\n\t\t\t<Menu.Item style={{ marginBottom: '50px',textAlign:'center' }}>\r\n\t\t\t\t<Link to='/'>\r\n\t\t\t\t\t<img  \r\n\t\t\t\t\tsrc='./taurus-logo.svg' \r\n\t\t\t\t\talt='Taurus Logo'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Link>\r\n\t\t\t</Menu.Item>\r\n\t\t\t<Menu.Item style={{ paddingLeft: '25%' }}>\r\n\t\t\t\t<Link to='/IssueToken'>\t\r\n\t\t\t\t\t<Icon \r\n\t\t                type=\"plus\" \r\n\t\t                style={{ color: 'rgba(0,0,0,.25)' }} \r\n\t                />\r\n\t\t\t\t\tIssue Token\r\n\t\t\t\t</Link>\r\n\t\t\t</Menu.Item>\t\t\t\r\n\t\t\t<Menu.Item style={{ paddingLeft: '25%' }}>\r\n\t\t\t\t<Link to='/'>\r\n\t\t\t\t\t<Icon \r\n\t                    type=\"bars\" \r\n\t                    style={{ color: 'rgba(0,0,0,.25)' }} \r\n\t                />\r\n\t\t\t\t\tToken List\r\n\t\t\t\t</Link>\r\n\t\t\t</Menu.Item>\t\t\t\t\t\r\n\t\t</Menu>\r\n\t)};\r\n\r\nexport default InlineMenu;","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Icon, Input } from 'antd';\r\n\r\nconst SearchBar = ({ searchChange }) => {\r\n  return (\r\n    <Form layout='vertical'>\r\n      <Form.Item className='searchBar'>\r\n        <Input\r\n          prefix={<Icon type=\"search\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n          placeholder='Contract name or address or ticker'\r\n          onChange={searchChange}\r\n        />\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst Actions = () => {\r\n\treturn(\r\n\t\t<Row type=\"flex\" justify=\"start\" gutter={16}>\r\n\t\t\t<Col>\r\n\t\t\t    <Button type=\"primary\">\r\n\t\t\t    \t<Link to='/IssueToken'>\r\n\t\t\t    \tIssue Token\r\n\t\t\t    \t</Link>\r\n\t\t\t    </Button>\t\r\n\t\t    </Col>\r\n\t\t    <Col>\t\r\n\t\t        <Button type=\"normal\" icon='download'>\r\n\t\t            Export to CSV\r\n\t\t        </Button>\r\n\t        </Col>\r\n\t\t</Row>\r\n\t)\r\n};\r\n\r\nexport default Actions;","import React, { Component } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Icon } from 'antd';\r\n\r\nclass GridData extends Component {\r\n\tconstructor(props) {\r\n    super(props);\r\n\t\tthis.columns = [{\r\n\t\t\t\ttitle: 'Token name',\r\n\t\t\t\tdataIndex: 'tokenName',\r\n\t\t\t\tkey: 'tokenName',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Token ticker',\r\n\t\t\t\tdataIndex: 'tokenTicker',\r\n\t\t\t\tkey: 'tokenTicker',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Total supply',\r\n\t\t\t\tdataIndex: 'totalSupply',\r\n\t\t\t\tkey: 'totalSupply',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Creation date',\r\n\t\t\t\tdataIndex: 'creationDate',\r\n\t\t\t\tkey: 'creationDate',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Issuer name',\r\n\t\t\t\tdataIndex: 'issuerName',\r\n\t\t\t\tkey: 'issuerName',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Template',\r\n\t\t\t\tdataIndex: 'template',\r\n\t\t\t\tkey: 'template',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Action',\r\n\t\t    \tkey: 'action',\r\n\t\t    \trender: (text, record, onClick) => (\r\n\t\t\t     \t<Icon \r\n\t\t\t     \t\ttype=\"delete\"\r\n\t\t\t     \t\tstyle={{ color: 'rgba(0,0,0,.25)', padding:'10px' }}\r\n\t\t\t     \t\tonClick={(e)=>{this.onDelete(record.key,e);}}\r\n\t\t\t     \t/>      \t\r\n\t\t    \t),\r\n\t\t\t},\r\n\t\t];\r\n\t}\r\n\r\n\t//Callback to App component\r\n\tonDelete = (key, e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.handleDelete(key);\r\n\t}\r\n\trender(){\r\n\t\tconst { tokenProp } = this.props;\r\n\t\treturn(\r\n\t\t\t\t<Table columns={this.columns} dataSource={tokenProp} />\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default GridData;\r\n","import { CHANGE_SEARCH_FIELD, TOKEN_DATA, DATE, TOKEN_UPDATE } from './constants.js';\r\n\r\nexport const setSearchField = (text) => ({\r\n\ttype: CHANGE_SEARCH_FIELD,\r\n\tpayload: text\r\n})\r\n\r\nexport const setToken = (token) => ({\r\n\ttype: TOKEN_DATA,\r\n\tpayload: token\r\n})\r\n\r\nexport const setDate = (date) => ({\r\n\ttype: DATE,\r\n\tpayload: date\r\n})\r\n\r\nexport const updateToken = (data) => ({\r\n\ttype: TOKEN_UPDATE,\r\n\tpayload: data\r\n})","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const TOKEN_DATA = 'TOKEN_DATA';\r\n\r\nexport const DATE = 'DATE';\r\n\r\nexport const TOKEN_UPDATE = 'TOKEN_UPDATE';","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Col, Row } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport SearchBar from '../Components/SearchBar';\r\nimport Actions from '../Components/ActionButtons';\r\nimport GridData from '../Components/GridData';\r\n\r\nimport { setSearchField, updateToken } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchField: state.searchTokens.searchField,\r\n    tokenData: state.getTokenData.tokenData,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => {\r\n      if (event.target.value.length > 2) {\r\n        dispatch(setSearchField(event.target.value))\r\n      } else {\r\n        dispatch(setSearchField(''))\r\n      }\r\n    },\r\n    filterTokenData: (data) => {\r\n      dispatch(updateToken(data))\r\n      localStorage.setItem('tokenData', JSON.stringify(data));\r\n    }\r\n  }\r\n}\r\n\r\nclass Home extends Component {\r\n\r\n  handleDelete = (key) => {\r\n    const { tokenData, filterTokenData } = this.props;\r\n    if (tokenData.some(token => token.key === key)) {\r\n      const deletedData = tokenData.filter(token => token.key !== key);\r\n      filterTokenData(deletedData);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {tokenData, searchField, onSearchChange} = this.props;\r\n\r\n    //to filter the search\r\n    let filteredTokens = tokenData.filter(token => {\r\n      return token.tokenName.toLowerCase().includes(searchField.toLowerCase()) ||\r\n        token.tokenTicker.toLowerCase().includes(searchField.toLowerCase()) ||\r\n        token.issuerName.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n\r\n    return (\r\n      <div className = 'main' >\r\n        <Row >\r\n          <h1 className = 'title' > Token List </h1> \r\n        </Row>\r\n        <Row type = \"flex\" justify = \"center\" gutter = {16} >\r\n          <Col span = {16} >\r\n            <SearchBar searchChange = {onSearchChange}/> \r\n          </Col> \r\n          <Col span = {8}>\r\n            <Actions />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span = {22}>\r\n            <GridData tokenProp = {filteredTokens} handleDelete = {this.handleDelete}/>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React, { Component } from 'react';\r\nimport { Button, Form, Input, InputNumber, Select } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst { Option } = Select;\r\n\r\nclass TokenForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      listOfCountries: [],\r\n    };\r\n  }\r\n\r\n  //Fetching list of country names\r\n  componentDidMount() {\r\n    fetch('https://restcountries.eu/rest/v2/all')\r\n      .then(answer => answer.json())\r\n      .then(countries => this.setState({ listOfCountries: countries }))\r\n      .catch(error => console.log('error :', error));\r\n  }\r\n\r\n  //Sending back token data to App component\r\n  callbackMethod = (values) => {\r\n    this.props.newToken(values);\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n        this.callbackMethod(values);\r\n        this.props.form.resetFields();\r\n        alert('New token added!');\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { listOfCountries } = this.state;\r\n    const countryName = listOfCountries.map(country =>\r\n      ({ name: country.name, code: country.alpha2Code }));\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n      },\r\n    };\r\n\r\n    const buttonFormItemLayout = {\r\n      wrapperCol: {\r\n        sm: {\r\n          span: 24,\r\n          offset: 16,\r\n        },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"Token Name\">\r\n          {getFieldDecorator('tokenName', {\r\n            rules: [{ required: true, message: 'Please enter your token name!' }],\r\n          })(<Input placeholder=\"Enter token name\" />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Token Ticker\">\r\n          {getFieldDecorator('tokenTicker', {\r\n            rules: [{ required: true, message: 'Please input your token ticker!' }],\r\n          })(<Input placeholder='Enter token ticker' />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Total Supply\">\r\n          {getFieldDecorator('totalSupply', {\r\n            rules: [{ required: true, message: 'Please input the total supply!' }],\r\n          })(<InputNumber placeholder='Enter total supply' style={{ width: '100%' }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Issuer Name\">\r\n          {getFieldDecorator('issuerName', {\r\n            rules: [{ required: true, message: 'Please input the name of the issuer!' }],\r\n          })(<Input placeholder='Enter issuer name' />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Token Template\" required=\"true\">\r\n          {getFieldDecorator('template', {\r\n            rules: [{ required: true, message: 'Please input the token template!' }],\r\n          })(<Input placeholder='Enter token template' />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Country\" required=\"true\">\r\n          {getFieldDecorator('country', { initialValue: 'Switzerland' }, {\r\n            rules: [{ required: true, message: 'Please select your country!' }],\r\n          })(<Select placeholder=\"Please select a country\">\r\n            {countryName.map(country => <Option key={country.code} value={country.name}>{country.name}</Option>)}\r\n          </Select>)}\r\n        </Form.Item>\r\n        <Form.Item {...buttonFormItemLayout}>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedTokenForm = Form.create({ name: 'tokenForm' })(TokenForm);\r\n\r\nexport default WrappedTokenForm;\r\n","import React, { Component } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport WrappedTokenForm from '../Components/IssueTokenForm';\r\n\r\nclass IssueToken extends Component {\r\n\r\n  render() {\r\n    const { callbackMethod } = this.props;\r\n    return (\r\n      <div className='main'>\r\n        <Row>\r\n          <h1 className='title'>Issue Token</h1>\r\n        </Row>\r\n        <Row className='content' gutter={16}>\r\n          <Col span={12}>\r\n            <WrappedTokenForm newToken={callbackMethod} />\r\n          </Col>\r\n        </Row>      \r\n      </div> \r\n    );\r\n  }\r\n}\r\n\r\nexport default IssueToken;\r\n","import { HashRouter, Route } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport { Col, Row } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport 'antd/dist/antd.css';\r\nimport './App.css';\r\n\r\nimport InlineMenu from '../Components/Menu';\r\nimport Home from '../Components/Home';\r\nimport IssueToken from '../Components/IssueToken';\r\n\r\nimport { setToken, setDate, updateToken } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tokenData: state.getTokenData.tokenData,\r\n    date: state.getDate.date\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return { \r\n    setsDate: () => {\r\n      let date = new Date();\r\n      let today = date.getDate() + \"/\";   // day\r\n      today += (date.getMonth()+1) + \"/\";   // month\r\n      today += date.getFullYear(); // year\r\n      dispatch(setDate(today))\r\n    },\r\n\r\n    addTokenData: (values) => {\r\n      dispatch(setToken(values))\r\n    },\r\n    updateTokenData: (data) => {\r\n      dispatch(updateToken(data))\r\n      localStorage.setItem('tokenData', JSON.stringify(data));\r\n    }\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    const { setsDate, updateTokenData } = this.props;\r\n    \r\n    setsDate();\r\n    \r\n    // Setting state variables from local storage.\r\n    localStorage.getItem('tokenData') && updateTokenData(JSON.parse(localStorage.getItem('tokenData')));\r\n  } \r\n\r\n  newTokenCallback = (values) => {\r\n    const { date, tokenData, addTokenData } = this.props;\r\n\r\n    let lastTokenKey = null;\r\n\r\n    if (tokenData.length === 0) {\r\n      lastTokenKey = 0;\r\n    } else {\r\n      lastTokenKey = tokenData.slice(-1)[0].key\r\n    }\r\n\r\n    // Adding date and incremental key to object values.\r\n    values.creationDate = date;\r\n    values.key = (+lastTokenKey + 1).toString();\r\n\r\n    addTokenData(values);\r\n\r\n    localStorage.setItem('tokenData', JSON.stringify([...tokenData,values]));\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter basename='/'>\r\n        <div className='app'>\r\n          <Row type=\"flex\" justify=\"space-around\" gutter={16}>\r\n            <Col span={6} className='menu'>\r\n              <InlineMenu />\r\n            </Col>\r\n            <Col span={18}>\r\n              <Route exact path='/' render={() =>\r\n                <Home /> } />\r\n              <Route path='/IssueToken' render={() =>\r\n                <IssueToken callbackMethod={this.newTokenCallback} />} />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tTOKEN_DATA,\r\n\tTOKEN_UPDATE,\r\n\tDATE\r\n} from './constants.js';\r\n\r\nconst initialStateSearch = {\r\n\tsearchField: ''\r\n}\r\n\r\nexport const searchTokens = (state = initialStateSearch, action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tsearchField: action.payload\r\n\t\t\t});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst initialStateToken = {\r\n\ttokenData: [{\r\n\t\tkey: 1,\r\n\t\ttokenName: 'TTism',\r\n\t\ttokenTicker: 'TTT',\r\n\t\ttotalSupply: 100000,\r\n\t\tcreationDate: '17/05/2019',\r\n\t\tissuerName: 'Taurus Group SA',\r\n\t\ttemplate: 'ERC20'\r\n\t}]\r\n}\r\n\r\nexport const getTokenData = (state = initialStateToken, action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase TOKEN_DATA:\r\n\t\t\treturn { ...state,\r\n\t\t\t\ttokenData: [...state.tokenData, action.payload]\r\n\t\t\t};\r\n\t\tcase TOKEN_UPDATE:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\ttokenData: action.payload \r\n\t\t\t});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst initialStateDate = {\r\n\tdate: ''\r\n}\r\n\r\nexport const getDate = (state = initialStateDate, action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase DATE:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tdate: action.payload\r\n\t\t\t});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport './index.css';\r\nimport App from './Containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { searchTokens, getTokenData, getDate } from './reducers';\r\n\r\nconst logger = createLogger();\r\n\r\nconst rootReducer = combineReducers ({ searchTokens, getTokenData, getDate });\r\nconst store = createStore(rootReducer, applyMiddleware(logger));\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>, document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}